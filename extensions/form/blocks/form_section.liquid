{% assign form_code = block.settings.form_code %}
{% assign custom_css = block.settings.custom_css %}

<!-- Inject Custom CSS from Theme Customizer -->
{% if custom_css != blank %}
  <style>
    {{ custom_css }}
  </style>
{% endif %}

<div class="form-wrapper custom-form-wrapper" style="padding: 2rem; max-width: 800px; margin: 0 auto;">
  <div id="form-container-{{ block.id }}" data-form-code="{{ form_code }}">
    <div class="loading">Loading form...</div>
  </div>
</div>

<script>
  (function() {
    const formCode = '{{ form_code }}';
    const containerId = 'form-container-{{ block.id }}';
    const container = document.getElementById(containerId);

    if (!formCode) {
      container.innerHTML = '<p style="color: #999;">Please configure the form code in the theme editor.</p>';
      return;
    }

    // Fetch form data from proxy
    // For development: use full URL, for production: use proxy path
    const isDevelopment = window.location.hostname.includes('myshopify.com');
    const apiUrl = isDevelopment 
      ? ' https://shopi-form-shopify-app.vercel.app//apps/form/' + formCode
      : '/apps/form/' + formCode;
    
    console.log('Fetching form from:', apiUrl);
    
    fetch(apiUrl)
      .then(response => {
        console.log('Response status:', response.status);
        if (!response.ok) {
          throw new Error('HTTP error ' + response.status);
        }
        return response.json();
      })
      .then(data => {
        console.log('Form data received:', data);
        if (data.error) {
          container.innerHTML = '<p style="color: #d72c0d;">Error: ' + data.error + '</p>';
          return;
        }

        // Render the form
        let html = '<div class="custom-form">';
        
        // Title
        html += '<h2 style="font-size: 2rem; margin-bottom: 1rem;">' + data.title + '</h2>';
        
        // Description
        if (data.description) {
          html += '<p style="color: #6b7280; margin-bottom: 2rem;">' + data.description + '</p>';
        }

        // Form
        html += '<form id="custom-form-' + data.code + '" style="display: flex; flex-direction: column; gap: 1.5rem;">';

        // Country list with phone codes
        const countries = [
          { label: "United States", value: "US", code: "+1" },
          { label: "Canada", value: "CA", code: "+1" },
          { label: "United Kingdom", value: "GB", code: "+44" },
          { label: "Australia", value: "AU", code: "+61" },
          { label: "Germany", value: "DE", code: "+49" },
          { label: "France", value: "FR", code: "+33" },
          { label: "Italy", value: "IT", code: "+39" },
          { label: "Spain", value: "ES", code: "+34" },
          { label: "Netherlands", value: "NL", code: "+31" },
          { label: "Belgium", value: "BE", code: "+32" },
          { label: "Switzerland", value: "CH", code: "+41" },
          { label: "Austria", value: "AT", code: "+43" },
          { label: "Sweden", value: "SE", code: "+46" },
          { label: "Norway", value: "NO", code: "+47" },
          { label: "Denmark", value: "DK", code: "+45" },
          { label: "Finland", value: "FI", code: "+358" },
          { label: "Ireland", value: "IE", code: "+353" },
          { label: "Poland", value: "PL", code: "+48" },
          { label: "Portugal", value: "PT", code: "+351" },
          { label: "Greece", value: "GR", code: "+30" },
          { label: "Japan", value: "JP", code: "+81" },
          { label: "South Korea", value: "KR", code: "+82" },
          { label: "China", value: "CN", code: "+86" },
          { label: "India", value: "IN", code: "+91" },
          { label: "Singapore", value: "SG", code: "+65" },
          { label: "New Zealand", value: "NZ", code: "+64" },
          { label: "Brazil", value: "BR", code: "+55" },
          { label: "Mexico", value: "MX", code: "+52" }
        ];

        // Detect user's country from IP geolocation
        let detectedCountry = 'US';
        let countryDetected = false;

        // Try to detect country from IP
        async function detectCountryFromIP() {
          try {
            const response = await fetch('https://ipapi.co/country/');
            if (response.ok) {
              const countryCode = await response.text();
              const trimmedCode = countryCode.trim().toUpperCase();
              const countryExists = countries.some(c => c.value === trimmedCode);
              if (countryExists) {
                detectedCountry = trimmedCode;
                countryDetected = true;
                updateCountrySelectors();
              }
            }
          } catch (error) {
            console.log('Could not detect country from IP, using browser locale');
            // Fallback to browser locale
            try {
              const locale = navigator.language || 'en-US';
              const countryCode = locale.split('-')[1]?.toUpperCase() || 'US';
              const countryExists = countries.some(c => c.value === countryCode);
              if (countryExists) {
                detectedCountry = countryCode;
              }
            } catch {
              detectedCountry = 'US';
            }
            updateCountrySelectors();
          }
        }

        function getUserCountry() {
          return detectedCountry;
        }

        function updateCountrySelectors() {
          // Update all country selectors with detected country
          data.fields.forEach(function(field) {
            if (field.type === 'company') {
              const uniqueId = 'company-' + field.id;
              const billingCountrySelect = document.getElementById(uniqueId + '-billing-country');
              const shippingCountrySelect = document.getElementById(uniqueId + '-shipping-country');
              
              if (billingCountrySelect) {
                billingCountrySelect.value = detectedCountry;
                // Trigger change event to update phone code
                billingCountrySelect.dispatchEvent(new Event('change'));
              }
              
              if (shippingCountrySelect) {
                shippingCountrySelect.value = detectedCountry;
                // Trigger change event to update phone code
                shippingCountrySelect.dispatchEvent(new Event('change'));
              }
            }
          });
        }

        // Render fields
        data.fields.forEach(function(field) {
          html += '<div class="form-field">';
          
          switch(field.type) {
            case 'text':
            case 'email':
            case 'phone':
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">' + 
                      field.label + (field.required ? ' *' : '') + '</label>';
              html += '<input type="' + field.type + '" name="' + field.id + '" ' +
                      'placeholder="' + (field.placeholder || '') + '" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              break;

            case 'date':
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">' + 
                      field.label + (field.required ? ' *' : '') + '</label>';
              html += '<input type="date" name="' + field.id + '" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              break;

            case 'textarea':
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">' + 
                      field.label + (field.required ? ' *' : '') + '</label>';
              html += '<textarea name="' + field.id + '" rows="4" ' +
                      'placeholder="' + (field.placeholder || '') + '" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;"></textarea>';
              break;

            case 'select':
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">' + 
                      field.label + (field.required ? ' *' : '') + '</label>';
              html += '<select name="' + field.id + '" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '<option value="">Select an option</option>';
              if (field.options) {
                field.options.forEach(function(option) {
                  html += '<option value="' + option + '">' + option + '</option>';
                });
              }
              html += '</select>';
              break;

            case 'checkbox':
              html += '<div style="display: flex; align-items: center; gap: 0.5rem;">';
              html += '<input type="checkbox" name="' + field.id + '" ' +
                      (field.required ? 'required' : '') + '>';
              html += '<label style="font-weight: 500;">' + field.label + 
                      (field.required ? ' *' : '') + '</label>';
              html += '</div>';
              break;

            case 'company':
              const userCountry = getUserCountry();
              const uniqueId = 'company-' + field.id;
              
              // Billing Address Section
              html += '<div style="margin-top: 1rem; padding: 1.5rem; background-color: #f9fafb; border-radius: 0.5rem;">';
              html += '<h3 style="font-size: 1.25rem; font-weight: 600; margin-bottom: 1rem;">Billing Address</h3>';
              
              // Country
              html += '<div style="margin-bottom: 1rem;">';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Country' + (field.required ? ' *' : '') + '</label>';
              html += '<select name="' + field.id + '_billing_country" id="' + uniqueId + '-billing-country" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              countries.forEach(function(country) {
                html += '<option value="' + country.value + '"' + (country.value === userCountry ? ' selected' : '') + '>' + country.label + '</option>';
              });
              html += '</select>';
              html += '</div>';
              
              // Company Name
              html += '<div style="margin-bottom: 1rem;">';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Company Name' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_billing_company_name" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'placeholder="Enter company name" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              
              // Street & Apartment (Grid)
              html += '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Street & House Number' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_billing_street" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'placeholder="123 Main St" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Apartment, Suite, etc.</label>';
              html += '<input type="text" name="' + field.id + '_billing_apartment" ' +
                      'placeholder="Apt 4B" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '</div>';
              
              // Postal Code & City (Grid)
              html += '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Postal Code' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_billing_postal_code" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'placeholder="10001" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">City' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_billing_city" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'placeholder="New York" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '</div>';
              
              // Phone with Country Code
              html += '<div style="display: grid; grid-template-columns: 100px 1fr; gap: 1rem; margin-bottom: 1rem;">';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Code</label>';
              html += '<input type="text" id="' + uniqueId + '-billing-code" value="" disabled ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem; background-color: #f3f4f6;">';
              html += '</div>';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Billing Phone' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="tel" name="' + field.id + '_billing_phone" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'placeholder="(555) 123-4567" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '</div>';
              
              // Company Tax ID
              html += '<div style="margin-bottom: 1rem;">';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Company Tax ID' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_billing_tax_id" ' +
                      (field.required ? 'required' : '') + ' ' +
                      'placeholder="Enter tax ID" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              
              // Divider
              html += '<hr style="border: 0; border-top: 1px solid #d1d5db; margin: 1.5rem 0;">';
              
              // Shipping Same as Billing Checkbox
              html += '<div style="display: flex; align-items: center; gap: 0.5rem; margin-bottom: 1rem;">';
              html += '<input type="checkbox" id="' + uniqueId + '-same-as-billing" checked ' +
                      'style="width: 1rem; height: 1rem;">';
              html += '<label for="' + uniqueId + '-same-as-billing" style="font-weight: 500;">Shipping address same as billing</label>';
              html += '</div>';
              
              // Shipping Address Section (Initially Hidden)
              html += '<div id="' + uniqueId + '-shipping-section" style="display: none;">';
              html += '<h3 style="font-size: 1.25rem; font-weight: 600; margin-bottom: 1rem; margin-top: 1rem;">Shipping Address</h3>';
              
              // Country
              html += '<div style="margin-bottom: 1rem;">';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Country' + (field.required ? ' *' : '') + '</label>';
              html += '<select name="' + field.id + '_shipping_country" id="' + uniqueId + '-shipping-country" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              countries.forEach(function(country) {
                html += '<option value="' + country.value + '"' + (country.value === userCountry ? ' selected' : '') + '>' + country.label + '</option>';
              });
              html += '</select>';
              html += '</div>';
              
              // Company Name
              html += '<div style="margin-bottom: 1rem;">';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Company Name' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_shipping_company_name" ' +
                      'placeholder="Enter company name" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              
              // Street & Apartment
              html += '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Street & House Number' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_shipping_street" ' +
                      'placeholder="123 Main St" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Apartment, Suite, etc.</label>';
              html += '<input type="text" name="' + field.id + '_shipping_apartment" ' +
                      'placeholder="Apt 4B" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '</div>';
              
              // Postal Code & City
              html += '<div style="display: grid; grid-template-columns: 1fr 1fr; gap: 1rem; margin-bottom: 1rem;">';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Postal Code' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_shipping_postal_code" ' +
                      'placeholder="10001" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">City' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="text" name="' + field.id + '_shipping_city" ' +
                      'placeholder="New York" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '</div>';
              
              // Phone with Country Code
              html += '<div style="display: grid; grid-template-columns: 100px 1fr; gap: 1rem; margin-bottom: 1rem;">';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Code</label>';
              html += '<input type="text" id="' + uniqueId + '-shipping-code" value="" disabled ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem; background-color: #f3f4f6;">';
              html += '</div>';
              html += '<div>';
              html += '<label style="display: block; margin-bottom: 0.5rem; font-weight: 500;">Shipping Phone' + (field.required ? ' *' : '') + '</label>';
              html += '<input type="tel" name="' + field.id + '_shipping_phone" ' +
                      'placeholder="(555) 123-4567" ' +
                      'style="width: 100%; padding: 0.75rem; border: 1px solid #d1d5db; border-radius: 0.375rem;">';
              html += '</div>';
              html += '</div>';
              
              html += '</div>'; // End shipping section
              html += '</div>'; // End company field wrapper
              break;
          }
          
          html += '</div>';
        });

        // Submit button
        html += '<button type="submit" style="background-color: #000; color: #fff; padding: 1rem 2rem; border: none; border-radius: 0.375rem; font-size: 1rem; font-weight: 600; cursor: pointer; margin-top: 1rem;">' +
                'Submit</button>';

        html += '</form>';
        html += '</div>';

        container.innerHTML = html;

        // Detect visitor's country from IP
        detectCountryFromIP();

        // Handle company field interactions
        data.fields.forEach(function(field) {
          if (field.type === 'company') {
            const uniqueId = 'company-' + field.id;
            
            // Update phone codes based on country selection
            const updatePhoneCode = function(countrySelectId, codeInputId) {
              const countrySelect = document.getElementById(countrySelectId);
              const codeInput = document.getElementById(codeInputId);
              
              if (countrySelect && codeInput) {
                const updateCode = function() {
                  const selectedCountry = countries.find(c => c.value === countrySelect.value);
                  codeInput.value = selectedCountry ? selectedCountry.code : '+1';
                };
                
                // Set initial value
                updateCode();
                
                // Update on change
                countrySelect.addEventListener('change', updateCode);
              }
            };
            
            updatePhoneCode(uniqueId + '-billing-country', uniqueId + '-billing-code');
            updatePhoneCode(uniqueId + '-shipping-country', uniqueId + '-shipping-code');
            
            // Handle shipping same as billing checkbox
            const sameAsBillingCheckbox = document.getElementById(uniqueId + '-same-as-billing');
            const shippingSection = document.getElementById(uniqueId + '-shipping-section');
            const shippingInputs = shippingSection.querySelectorAll('input[type="text"], input[type="tel"], select');
            
            sameAsBillingCheckbox.addEventListener('change', function() {
              if (this.checked) {
                shippingSection.style.display = 'none';
                // Remove required attribute from shipping fields
                shippingInputs.forEach(function(input) {
                  input.removeAttribute('required');
                });
              } else {
                shippingSection.style.display = 'block';
                // Add required attribute back to shipping fields that should be required
                if (field.required) {
                  shippingSection.querySelectorAll('input[name$="_company_name"], input[name$="_street"], input[name$="_postal_code"], input[name$="_city"], input[name$="_phone"]').forEach(function(input) {
                    input.setAttribute('required', 'required');
                  });
                }
              }
            });
          }
        });

        // Handle form submission
        const form = document.getElementById('custom-form-' + data.code);
        form.addEventListener('submit', function(e) {
          e.preventDefault();
          
          // Show loading state
          const submitBtn = form.querySelector('button[type="submit"]');
          const originalText = submitBtn.textContent;
          submitBtn.textContent = 'Submitting...';
          submitBtn.disabled = true;
          
          const formData = new FormData(e.target);
          formData.append('formCode', data.code);
          formData.append('shop', data.shop);

          // Submit to backend
          const submitUrl = isDevelopment 
            ? ' https://shopi-form-shopify-app.vercel.app//apps/form/submit'
            : '/apps/form/submit';

          fetch(submitUrl, {
            method: 'POST',
            body: formData
          })
          .then(response => response.json())
          .then(result => {
            console.log('Submission result:', result);
            
            if (result.success) {
              alert(result.message || 'Thank you! Your form has been submitted.');
              e.target.reset();
            } else {
              alert('Error: ' + (result.error || 'Something went wrong'));
            }
            
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
          })
          .catch(error => {
            console.error('Submission error:', error);
            alert('Error submitting form. Please try again.');
            submitBtn.textContent = originalText;
            submitBtn.disabled = false;
          });
        });
      })
      .catch(error => {
        console.error('Error loading form:', error);
        console.error('Error details:', error.message);
        container.innerHTML = '<div style="color: #d72c0d;"><p><strong>Error loading form.</strong></p><p>Code: ' + formCode + '</p><p>URL: ' + apiUrl + '</p><p>Error: ' + error.message + '</p><p>Check console for details.</p></div>';
      });
  })();
</script>

<style>
  .custom-form-wrapper input:focus,
  .custom-form-wrapper textarea:focus,
  .custom-form-wrapper select:focus {
    outline: 2px solid #000;
    outline-offset: 2px;
  }

  .custom-form-wrapper button:hover {
    background-color: #374151;
  }

  /* Responsive grid for mobile */
  @media (max-width: 640px) {
    .custom-form-wrapper [style*="grid-template-columns: 1fr 1fr"],
    .custom-form-wrapper [style*="grid-template-columns: 100px 1fr"] {
      grid-template-columns: 1fr !important;
    }
  }
</style>

{% schema %}
{
  "name": "ShopiForm",
  "target": "section",
  "settings": [
    {
      "type": "text",
      "id": "form_code",
      "label": "Form Code",
      "info": "Enter the 5-digit form code from your admin panel"
    },
    {
      "type": "html",
      "id": "custom_css",
      "label": "Custom CSS",
      "info": "Add custom CSS"
    }
  ]
}
{% endschema %}

